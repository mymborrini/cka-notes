Manual Scheduling

Let's start with a simple port definition file

apiVersion: v1
kind: Pod 
metadata: 
  name: nginx
  lables: 
    name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    ports:
    - containerPort: 8080

To acoid a pod to be parsing by the Scheduler you have to specify a property called nodename.
In that case k8s already knows the node the pod should be placed on, and does not call the Scheduler functions.

apiVersion: v1
kind: Pod 
metadata: 
  name: nginx
  lables: 
    name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    ports:
    - containerPort: 8080
  nodeName: node02

If you leave the pod without setting it, it will be the Scheduler who fullfill this field with the most ranked node. If 
you don't have a Scheduler and don't specify a nodeName the pod will remain in pending state.

Is there a way to specify a node to an exisint pod?

Yes with the Binding object

apiVersion: v1
kind: Binding
metadata:
  name: nginx
target:
  apiVersion: v1
  kind: Node
  name: node02

Then you can make a request to the Binding api using this yaml as a json object

curl --header "Cont-Type:application/json" --request POST --data '{"apiVersion": "v1", "kind": "Binding"...}' http://$SERVER/api/v1/namespaces/default/pods/$PODNAME/binding 
